Vagrant.configure('2') do |config|
  config.vm.box = 'ubuntu/focal64'
  config.vm.provision 'shell', path: 'scripts/001-config.learn.ubuntu.sh'
  config.vm.provision 'shell', path: 'https://get.docker.com'
  config.vm.provision 'shell',
                      path: 'scripts/003-config.docker.after.install.sh'

  # use `define` to create a nested configuration representing a specific VM
  # - https://www.vagrantup.com/docs/multi-machine#defining-multiple-machines
  # `config` applies to all VMs
  # `swarm1` block variable has the same type as `config`, scoped to a nested machine
  #  - GOTCHA is to use `config.` when you intended to use `swarm1.`
  #  - even inside the define block, `config.` applies globally!

  (1..3).each do |num|
    config.vm.define "swarm#{num}" do |nested|
      nested.vm.hostname = "swarm#{num}"
      nested.vm.network 'private_network', ip: "192.168.30.13#{num}"

      # TODO provision - join swarm on each node

      case num
      when 1
        # 1st VM only
        nested.vm.provision 'shell', inline: <<-SHELL
      	  docker swarm init --advertise-addr 192.168.30.131
    	SHELL
      else
        # all other VMs
        #nested.vm.provision 'shell', inline: <<-SHELL
        #  docker swarm join
        #SHELL
      end
    end
  end

  # CAUTION: this is per VM! adjust as necessary for your hardware
  # decrease the number of VMs with the loop counter if need be
  config.vm.provider 'virtualbox' do |vb|
    vb.cpus = 2
    vb.memory = '4096'
  end
end
